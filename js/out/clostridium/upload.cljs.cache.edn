{:rename-macros {}, :renames {}, :externs {FileReader {}, Object {}}, :use-macros {go-loop cljs.core.async.macros}, :excludes #{}, :name clostridium.upload, :imports nil, :requires {cljs.core.async cljs.core.async, befunge clostridium.befunge, clostridium.befunge clostridium.befunge, clostridium.common clostridium.common}, :cljs.spec/speced-vars [], :uses {chan cljs.core.async, print-js clostridium.common, app-state clostridium.common, put! cljs.core.async}, :defs {first-file {:name clostridium.upload/first-file, :file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 9, :column 1, :end-line 9, :end-column 16, :meta {:file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 9, :column 6, :end-line 9, :end-column 16}, :tag any}, extract-result {:name clostridium.upload/extract-result, :file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 16, :column 1, :end-line 16, :end-column 20, :meta {:file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 16, :column 6, :end-line 16, :end-column 20}, :tag any}, upload-reqs {:name clostridium.upload/upload-reqs, :file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 19, :column 1, :end-line 19, :end-column 17, :meta {:file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 19, :column 6, :end-line 19, :end-column 17}, :tag any}, file-reads {:name clostridium.upload/file-reads, :file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 20, :column 1, :end-line 20, :end-column 16, :meta {:file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 20, :column 6, :end-line 20, :end-column 16}, :tag any}, put-upload {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 22, :column 7, :end-line 22, :end-column 17, :arglists (quote ([e]))}, :name clostridium.upload/put-upload, :variadic false, :file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :end-column 17, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, upload-btn {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 25, :column 7, :end-line 25, :end-column 17, :arglists (quote ([file-name]))}, :name clostridium.upload/upload-btn, :variadic false, :file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :end-column 17, :method-params ([file-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([file-name]))}, load-program {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :line 43, :column 7, :end-line 43, :end-column 19, :arglists (quote ([data]))}, :name clostridium.upload/load-program, :variadic false, :file "/Users/palfrey/src/clostridium/src/clostridium/upload.cljs", :end-column 19, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}}, :cljs.spec/registry-ref [], :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:firstcolumn :else :recur :type :on-click :input.hidden-xs-up :label :auto-run :file-name :b :i.fa.fa-times :i.fa.fa-upload.fa-lg :console :on-change :p :data}, :order [:p :label :input.hidden-xs-up :type :on-change :i.fa.fa-upload.fa-lg :i.fa.fa-times :on-click :data :recur :file-name :else :b :console :auto-run :firstcolumn]}, :doc nil}