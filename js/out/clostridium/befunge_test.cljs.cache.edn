{:rename-macros {}, :renames {}, :use-macros {runPyfungeTests clostridium.befunge_test_core, doo-tests doo.runner}, :excludes #{}, :name clostridium.befunge_test, :imports nil, :requires {doo.runner doo.runner, clostridium.befunge_test_core clostridium.befunge_test_core}, :uses nil, :defs {befunge98-set-delta {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-set-delta, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-trampoline {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-trampoline, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-sgml-spaces-wrap3 {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-sgml-spaces-wrap3, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-sgml-spaces-wrap2 {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-sgml-spaces-wrap2, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-sgml-spaces {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-sgml-spaces, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-iterate-zero {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-iterate-zero, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-fetchchar-skip {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-fetchchar-skip, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-clear-stack {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-clear-stack, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-sysinfo {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-sysinfo, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-iterate-positive {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-iterate-positive, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-sgml-spaces-wrap {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-sgml-spaces-wrap, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-sgml-spaces-wrap4 {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-sgml-spaces-wrap4, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-hex-number {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-hex-number, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, befunge98-storechar-skip {:protocol-inline nil, :meta {:file nil}, :name clostridium.befunge_test/befunge98-storechar-skip, :variadic false, :file "test/cljs/clostridium/befunge_test.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 6, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {doo.runner doo.runner, clostridium.befunge_test_core clostridium.befunge_test_core}, :cljs.analyzer/constants {:seen #{clostridium.befunge_test/befunge98-hex-number clostridium.befunge_test/befunge98-fetchchar-skip clostridium.befunge_test clostridium.befunge_test/befunge98-iterate-zero befunge98-set-delta befunge98-trampoline befunge98-sgml-spaces-wrap3 :ns :name befunge98-sgml-spaces-wrap2 :file clojure.core/= clostridium.befunge_test/befunge98-storechar-skip :type clostridium.befunge_test/befunge98-clear-stack clostridium.befunge_test/befunge98-sysinfo clostridium.befunge_test/befunge98-iterate-positive clostridium.befunge_test/befunge98-sgml-spaces :column clostridium.befunge_test/befunge98-trampoline clostridium.befunge_test/befunge98-set-delta befunge98-sgml-spaces clostridium.befunge_test/befunge98-sgml-spaces-wrap4 :fail clostridium.befunge_test/befunge98-sgml-spaces-wrap befunge98-iterate-zero :line clostridium.befunge_test/befunge98-sgml-spaces-wrap2 not befunge98-fetchchar-skip result__10076__auto__ :expected befunge98-clear-stack trimExpected__10075__auto__ befunge98-sysinfo befunge98-iterate-positive :error befunge98-sgml-spaces-wrap :pass :arglists befunge98-sgml-spaces-wrap4 :actual :doc befunge98-hex-number clostridium.befunge_test/befunge98-sgml-spaces-wrap3 :test befunge98-storechar-skip :message}, :order [:type :expected :actual :message :error clojure.core/= trimExpected__10075__auto__ result__10076__auto__ :pass :fail not clostridium.befunge_test/befunge98-clear-stack :file :ns :doc :line :column :name :test :arglists clostridium.befunge_test befunge98-clear-stack clostridium.befunge_test/befunge98-fetchchar-skip befunge98-fetchchar-skip clostridium.befunge_test/befunge98-hex-number befunge98-hex-number clostridium.befunge_test/befunge98-iterate-positive befunge98-iterate-positive clostridium.befunge_test/befunge98-iterate-zero befunge98-iterate-zero clostridium.befunge_test/befunge98-set-delta befunge98-set-delta clostridium.befunge_test/befunge98-sgml-spaces-wrap befunge98-sgml-spaces-wrap clostridium.befunge_test/befunge98-sgml-spaces-wrap2 befunge98-sgml-spaces-wrap2 clostridium.befunge_test/befunge98-sgml-spaces-wrap3 befunge98-sgml-spaces-wrap3 clostridium.befunge_test/befunge98-sgml-spaces-wrap4 befunge98-sgml-spaces-wrap4 clostridium.befunge_test/befunge98-sgml-spaces befunge98-sgml-spaces clostridium.befunge_test/befunge98-storechar-skip befunge98-storechar-skip clostridium.befunge_test/befunge98-sysinfo befunge98-sysinfo clostridium.befunge_test/befunge98-trampoline befunge98-trampoline]}, :doc nil}