{:rename-macros {}, :renames {}, :externs {Error {}, Date {prototype {cljs-time$coerce$ICoerce$ {}, cljs-time$coerce$ICoerce$to-date-time$arity$1 {}}}}, :use-macros {}, :excludes #{second extend}, :name cljs-time.coerce, :imports {UtcDateTime goog.date.UtcDateTime}, :requires {cljs-time.core cljs-time.core, time-fmt cljs-time.format, cljs-time.format cljs-time.format, UtcDateTime goog.date.UtcDateTime}, :cljs.spec/speced-vars [], :uses {from-default-time-zone cljs-time.core, minute cljs-time.core, hour cljs-time.core, day cljs-time.core, date-time cljs-time.core, second cljs-time.core, month cljs-time.core, year cljs-time.core, milli cljs-time.core}, :defs {to-local-date {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 67, :column 7, :end-line 67, :end-column 20, :arglists (quote ([obj])), :doc "Convert `obj` to a goog.date.Date instance"}, :name cljs-time.coerce/to-local-date, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 20, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :doc "Convert `obj` to a goog.date.Date instance"}, to-long {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 44, :column 7, :end-line 44, :end-column 14, :arglists (quote ([obj])), :doc "Convert `obj` to the number of milliseconds after the Unix epoch."}, :name cljs-time.coerce/to-long, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 14, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :doc "Convert `obj` to the number of milliseconds after the Unix epoch."}, from-date {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 38, :column 7, :end-line 38, :end-column 16, :arglists (quote ([date])), :doc "Returns a DateTime instance in the UTC time zone corresponding to the given\n  js Date object."}, :name cljs-time.coerce/from-date, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 16, :method-params ([date]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date])), :doc "Returns a DateTime instance in the UTC time zone corresponding to the given\n  js Date object."}, to-local-date-time {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 74, :column 7, :end-line 74, :end-column 25, :arglists (quote ([obj])), :doc "Convert `obj` to a goog.date.DateTime instance"}, :name cljs-time.coerce/to-local-date-time, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 25, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :doc "Convert `obj` to a goog.date.DateTime instance"}, from-string {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 28, :column 7, :end-line 28, :end-column 18, :arglists (quote ([s])), :doc "Returns DateTime instance from string using formatters in cljs-time.format,\n  returning first which parses"}, :name cljs-time.coerce/from-string, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Returns DateTime instance from string using formatters in cljs-time.format,\n  returning first which parses"}, to-string {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 59, :column 7, :end-line 59, :end-column 16, :arglists (quote ([obj])), :doc "Returns a string representation of obj in UTC time-zone\n  using \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\" date-time representation."}, :name cljs-time.coerce/to-string, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 16, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :doc "Returns a string representation of obj in UTC time-zone\n  using \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\" date-time representation."}, to-date {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 54, :column 7, :end-line 54, :end-column 14, :arglists (quote ([obj])), :doc "Convert `obj` to a JavaScript Date instance."}, :name cljs-time.coerce/to-date, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 14, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :doc "Convert `obj` to a JavaScript Date instance."}, from-long {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([millis])), :doc "Returns a DateTime instance in the UTC time zone corresponding to the given\n  number of milliseconds after the Unix epoch."}, :name cljs-time.coerce/from-long, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 16, :method-params ([millis]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([millis])), :doc "Returns a DateTime instance in the UTC time zone corresponding to the given\n  number of milliseconds after the Unix epoch."}, ICoerce {:meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 19, :column 14, :end-line 19, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {to-date-time [[obj]]}}}, :protocol-symbol true, :name cljs-time.coerce/ICoerce, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 21, :column 1, :line 19, :protocol-info {:methods {to-date-time [[obj]]}}, :info nil, :end-line 19, :tag any, :impls #{nil js/Date goog/date.DateTime number goog/date.Date string goog/date.UtcDateTime}, :doc nil, :jsdoc ("@interface")}, to-date-time {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 20, :column 4, :end-line 20, :end-column 16, :protocol cljs-time.coerce/ICoerce, :doc "Convert `obj` to a goog.date.DateTime instance.", :arglists (quote ([obj]))}, :protocol cljs-time.coerce/ICoerce, :name cljs-time.coerce/to-date-time, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 16, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :doc "Convert `obj` to a goog.date.DateTime instance."}, to-epoch {:protocol-inline nil, :meta {:file "/Users/palfrey/src/clostridium/resources/public/js/out/cljs_time/coerce.cljs", :line 49, :column 7, :end-line 49, :end-column 15, :arglists (quote ([obj])), :doc "Convert `obj` to Unix epoch."}, :name cljs-time.coerce/to-epoch, :variadic false, :file "resources/public/js/out/cljs_time/coerce.cljs", :end-column 15, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :doc "Convert `obj` to Unix epoch."}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:date-time :else}, :order [:else :date-time]}, :doc "### Utilites to coerce goog.data DateTime instances to and from\n  various other types.\n\n  For example, to convert a goog.date DateTime to and from a js number:\n\n    => (to-long (date-time 1998 4 25))\n    893462400000\n\n    => (from-long 893462400000)\n    #<19980425T000000>"}